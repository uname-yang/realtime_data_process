zookeeper:
  image: wurstmeister/zookeeper
  ports:
    - "2181:2181"

kafka:
  image: wurstmeister/kafka
  ports:
    - "9092:9092"
  environment:
    KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    KAFKA_CREATE_TOPICS: "tweets:1:1"
    KAFKA_HEAP_OPTS: "-Xmx256M -Xms128M"
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  links:
    - zookeeper

# cassandra:
#   image: cassandra:latest
#   hostname: cassandra
#   ports:
#     - "9042:9042"

redis:
  image: redis:latest
  hostname: redis
  ports:
    - "6379:6379"

tweets:
  build: kafka_producer
  restart: always
  hostname: twitterkafkaproducer
  environment:
    ACCESS_TOKEN: "851652975957127168-kCdHaLXCHAf3yBzynoKc62jG7fxI71O"
    ACCESS_TOKEN_SECRET: "iV330tl5xRtN960uXHHyImcTwBlt5CYSqwb7EH4EJcCWy"
    CONSUMER_KEY: "PRUgkvxvKCAvfT6cnoG8ZueMg"
    CONSUMER_SECRET: "WwtS8oKDT3H7dqQxNdQ7idUk5gMYX1ZeWXDA199QOHKLWIQhoQ"
    KAFKA_TOPIC_NAME: "tweets"
    KEYWORDS_LIST: "python,golang,scala,ruby,javascript,sql"
    KAFKA_HOST_NAME: "kafka:9092"
  links:
    - kafka

worker:
  build: kafka2redis
  restart: always
  environment:
    KAFKA_TOPIC_NAME: "tweets"
    KAFKA_HOST_NAME: "kafka:9092"
  links:
    - kafka
    - redis

# connect:
#   image: datamountaineer/kafka-connect-cassandra
#   restart: always
#   environment:
#     KAFKA_TOPIC_NAME: "tweets"
#     CONNECTOR_CONNECTOR_CLASS: "com.datamountaineer.streamreactor.connect.cassandra.sink.CassandraSinkConnector"
#     CONNECTOR_NAME: "cassandra-sink-orders"
#     CONNECTOR_TASKS_MAX: "1"
#     CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
#     CONNECT_GROUP_ID: "connect"
#     CONNECT_CONFIG_STORAGE_TOPIC: "config"
#     CONNECTOR_TOPICS: "tweets"
#     CONNECTOR_CONNECT_CASSANDRA_SINK_KCQL: "INSERT INTO tweets SELECT * FROM tweets"
#     CONNECTOR_CONNECT_CASSANDRA_CONTACT_POINTS: "cassandra"
#     CONNECTOR_CONNECT_CASSANDRA_PORT: "9042"
#     CONNECTOR_CONNECT_CASSANDRA_KEY_SPACE: "twitter"
#   links:
#     - kafka
#     - cassandra

web:
  build: web
  restart: always
  hostname: web
  environment:
    KEYWORDS_LIST: "python,golang,scala,ruby,javascript,sql"
  links:
    - redis
  ports:
    - "80:5000"
